{"version":3,"sources":["components/customer/customer.js","actions/actions.js","actions/types.js","components/navbar/navbar.js","App.js","reducers/itemReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js","components/customer/customer.module.css"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Customer","Container","style","marginTop","Grid","container","item","xs","Paper","className","classes","form","name","type","placeholder","component","value","checked","this","props","values","test","onChange","setFieldValue","required","Component","Formikapp","withFormik","mapPropsToValues","website","comments","lieferzeit","salutation","firstname","lastname","position","language","telephone","email","validationSchema","Yup","shape","min","url","handleSubmit","setSubmitting","resetForm","data","_id","Math","random","createdAt","modifiedAt","internalComments","deliveryTime","minimumOrder","contacts","firstName","lastName","spokenLanguage","phone","setTimeout","console","log","addItem","alert","connect","state","dispatch","axios","post","then","res","payload","menuButton","marginRight","title","ButtonAppBar","AppBar","Toolbar","Typography","variant","App","initialState","items","loading","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.60038c84.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../actions/actions';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withFormik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classes from './customer.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t},\r\n}));\r\n\r\nclass Customer extends Component\r\n{\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\r\n\t\t\t<Container style={{ marginTop: '50px' }}>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} item md={6}>\r\n\t\t\t\t\t\t<Paper className={useStyles.paper}>\r\n\t\t\t\t\t\t\t<h3>zulieferer Hinzuf√ºgen</h3>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t<Form className={classes.form}>\r\n\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"name\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"name\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your name *\" /><br />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"website\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"website\" placeholder=\"Enter your website\" /><br />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"email\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field component=\"textarea\" name=\"comments\" placeholder=\"Enter comments!\" /><br />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"comments\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"lieferzeit\" placeholder=\"Enter lieferzeit\" /><br />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"lieferzeit\" /></p>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} item md={6}>\r\n\t\t\t\t\t\t<Paper className={useStyles.paper}>\r\n\t\t\t\t\t\t\t<h3>Contact Person</h3>\r\n\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\r\n\r\n\t\t\t\t\t\t\t\t<Form className={classes.form}>\r\n\t\t\t\t\t\t\t\t\t<label><b> Anrede: <span>*</span></b></label>\r\n\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<label><b> HERR:</b></label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"test\" value=\"M\" checked={this.props.values.test === \"M\"}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => this.props.setFieldValue(\"test\", \"M\")} />\r\n\t\t\t\t\t\t\t\t\t<label><b>FRAU :</b></label>\r\n\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"test\" value=\"F\" checked={this.props.values.test === \"F\"}\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => this.props.setFieldValue(\"test\", \"F\")} />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"firstname\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"firstname\" placeholder=\"Enter your firstname *\" required=\"required\" />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"lastname\" /></p>\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"lastname\" placeholder=\"Enter your lastname *\" required=\"required\" />\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"position\" placeholder=\"Enter your postion\" />\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"language\" placeholder=\"Enter your language\" />\r\n\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"telephone\" placeholder=\"Enter your telephone number *\" required=\"required\" />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"telephone\" /></p>\r\n\r\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"email\" placeholder=\"Enter your email *\" required=\"required\" />\r\n\t\t\t\t\t\t\t\t\t<p><ErrorMessage name=\"email\" /></p>\r\n\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} item md={12}>\r\n\t\t\t\t\t\t<Paper className={useStyles.paper} style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t<Form><button type='submit'> Hinzuf√ºgen </button>\r\n\t\t\t\t\t\t\t</Form> </Paper></Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// formik HOC \r\n\r\nconst Formikapp = withFormik({\r\n\r\n\tmapPropsToValues(props)\r\n\t{\r\n\r\n\t\treturn {\r\n\t\t\tname: props.name || '',\r\n\t\t\twebsite: props.website || '',\r\n\t\t\tcomments: props.comments || '',\r\n\t\t\tlieferzeit: props.lieferzeit || '',\r\n\t\t\tsalutation: props.test || '',\r\n\t\t\tfirstname: props.firstname || '',\r\n\t\t\tlastname: props.lastname || '',\r\n\t\t\tposition: props.position || '',\r\n\t\t\tlanguage: props.language || '',\r\n\t\t\ttelephone: props.telephone || '',\r\n\t\t\temail: props.email || '',\r\n\t\t}\r\n\t},\r\n\t// form validation using Yup\r\n\tvalidationSchema: Yup.object().shape({\r\n\t\tname: Yup.string().min(5).required('* name is required !'),\r\n\t\twebsite: Yup.string().url().required('* website must be a valid URL \"http://www.google.com\"'),\r\n\t\tcomments: Yup.string().min(10).required('* comments are required min 10 characters !'),\r\n\t\tlieferzeit: Yup.number().min(1).required('* lieferzeit must greater than zero !'),\r\n\t\tfirstname: Yup.string().min(5).required('* name is required !'),\r\n\t\tlastname: Yup.string().min(4).required('* last name is required!'),\r\n\t\ttelephone: Yup.number().min(6).required('phone number must be 6 digits'),\r\n\t\temail: Yup.string().email().required('* email must be in \"@gmail.com\"')\r\n\t}),\r\n\thandleSubmit: (values, { setSubmitting, resetForm, props }) =>\r\n\t{\r\n\t\t// sending the data object to redux thunk for api call\r\n\t\tconst data = {\r\n\t\t\t_id: Math.random(),\r\n\t\t\tcreatedAt: '',\r\n\t\t\tmodifiedAt: '',\r\n\t\t\tname: values.name,\r\n\t\t\twebsite: values.website,\r\n\t\t\tinternalComments: '',\r\n\t\t\tdeliveryTime: 14,\r\n\t\t\tminimumOrder: 600,\r\n\t\t\tcontacts: [\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: Math.random(),\r\n\t\t\t\t\tsalutation: values.test,\r\n\t\t\t\t\tfirstName: values.firstname,\r\n\t\t\t\t\tlastName: values.lastname,\r\n\t\t\t\t\tposition: values.position,\r\n\t\t\t\t\tspokenLanguage: values.language,\r\n\t\t\t\t\tphone: values.telephone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t}]\r\n\t\t}\r\n\r\n\t\tsetTimeout(() =>\r\n\t\t{\r\n\t\t\tsetSubmitting(false);\r\n\t\t\tconsole.log(data)\r\n\t\t\t// sending to redux thunk\r\n\t\t\tprops.addItem(data)\r\n\t\t\talert('the customer data has been added !')\r\n\t\t\tresetForm();\r\n\t\t}, 1000);\r\n\t}\r\n})(Customer);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\titem: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { addItem })(Formikapp);\r\n\r\n","import { ADD_ITEMS, LOADING } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const addItem = (data) => dispatch =>\r\n{\r\n        console.log(data);\r\n        axios.post('/Suppliers', data)\r\n                .then(res => dispatch({\r\n                        type: ADD_ITEMS,\r\n                        payload: res.data\r\n                }))\r\n}\r\n\r\nexport const loading = () =>\r\n{\r\n        return {\r\n                type: LOADING,\r\n        };\r\n}\r\n\r\n\r\n","export const ADD_ITEMS = 'ADD_ITEMS';\r\nexport const LOADING = 'LOADING';\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\nexport default function ButtonAppBar()\r\n{\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tCustomer Details ...\r\n          </Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\nimport './App.css';\nimport Customer from './components/customer/customer';\nimport ButtonAppBar from './components/navbar/navbar';\nimport Container from '@material-ui/core/Container';\nfunction App()\n{\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ButtonAppBar />\n\t\t\t<Container>\n\t\t\t\t<Customer />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\nexport default App;\n","\r\nimport { ADD_ITEMS, LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n        items: [],\r\n        loading: false\r\n};\r\nexport default function (state = initialState, action)\r\n{\r\n        switch (action.type)\r\n        {\r\n\r\n                case ADD_ITEMS:\r\n                        return {\r\n                                ...state,\r\n                                items: [action.payload, ...state.items]\r\n                        }\r\n\r\n                case LOADING:\r\n                        return {\r\n                                ...state,\r\n                                loading: true\r\n                        }\r\n                default:\r\n                        return state;\r\n        }\r\n}","import {combineReducers} from 'redux';\r\nimport itemReducer from './itemReducer';\r\n\r\nexport default combineReducers({\r\n        item:  itemReducer,\r\n});","import {createStore , applyMiddleware , compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initalState = {} ; \r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer , initalState , compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  {Provider} from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"customer_form__3LLGl\"};"],"sourceRoot":""}